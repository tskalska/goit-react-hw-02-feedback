{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.jsx","components/statistics/Statistics.jsx","components/section/Section.jsx","components/notification/Notification.jsx","App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css","components/statistics/Statistics.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","styles","buttonsContainer","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","resultsContainer","Section","props","title","children","Notification","message","App","state","countTotalFeedback","setState","prevState","countPositiveFeedbackPercentage","Math","round","content","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6SAGe,SAASA,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAChD,OACI,qBAAKC,UAAWC,IAAOC,iBAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAAqBC,KAAK,SAASC,QAAS,WAAQP,EAAgBK,IAApE,SACIA,GADSA,Q,oBCQRG,MAZf,YAAiE,IAA5CC,EAA2C,EAA3CA,KAAKC,EAAsC,EAAtCA,QAAQC,EAA8B,EAA9BA,IAAIC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,mBAC1C,OACE,sBAAKZ,UAAWC,IAAOY,iBAAvB,UACE,0CAAaL,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KAAa,uBAC3B,uDAA0BC,EAA1B,WCRS,SAASE,EAASC,GAC/B,OACE,gCACE,6BAAKA,EAAMC,QACX,8BAAMD,EAAME,cCJH,SAASC,EAAcH,GACpC,OACE,8BACE,+BAAOA,EAAMI,Y,ICgEJC,E,4MA7DbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAKtBU,mBAAqB,WACnB,EAAKC,UAAU,SAAAC,GAAS,MAAK,CAC3Bb,MAAOa,EAAUhB,KAAOgB,EAAUf,QAAUe,EAAUd,S,EAI1De,gCAAkC,WAChC,EAAKF,UAAU,SAAAC,GAAS,MAAK,CAC3BZ,mBAAoBc,KAAKC,MAAM,IAAIH,EAAUb,MAAMa,EAAUhB,W,EAIjET,gBAAkB,SAAAK,GAChB,EAAKmB,UAAS,SAAAC,GAAS,sBACpBpB,EAASoB,EAAUpB,GAAU,MAEhC,EAAKkB,qBACL,EAAKG,mC,4CAGP,WACE,IAAIG,EAcJ,OAZGA,EADCC,KAAKR,MAAMV,MAAM,EACR,cAAC,EAAD,CACVH,KAAMqB,KAAKR,MAAMb,KACjBC,QAASoB,KAAKR,MAAMZ,QACpBC,IAAKmB,KAAKR,MAAMX,IAChBC,MAAOkB,KAAKR,MAAMV,MAClBC,mBAAoBiB,KAAKR,MAAMT,qBAGtB,cAACM,EAAD,CACVC,QAAS,sBAIT,gCACE,cAACL,EAAD,CAASE,MAAO,wBAAhB,SACE,cAACnB,EAAD,CACEC,QAAS,CAAC,OAAQ,MAAO,WACzBC,gBAAiB8B,KAAK9B,oBAG1B,cAACe,EAAD,CAASE,MAAO,aAAhB,SACKY,W,GAvDKE,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,iBAAmB,4C,kBCArCD,EAAOC,QAAU,CAAC,iBAAmB,wC","file":"static/js/main.db047dba.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({options, onLeaveFeedback}) {\r\n  return (\r\n      <div className={styles.buttonsContainer}>\r\n        {options.map(option =>\r\n          <button key={option} type='button' onClick={() => { onLeaveFeedback(option) }}>\r\n            { option }\r\n          </button>\r\n        )}\r\n      </div>\r\n  )\r\n}","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({good,neutral,bad,total,positivePercentage}){\r\n  return (\r\n    <div className={styles.resultsContainer}>\r\n      <span>Good: {good}</span>\r\n      <span>Neutral: {neutral}</span>\r\n      <span>Bad: {bad}</span>\r\n      <span>Total: {total}</span><br/>\r\n      <span>Positive Feedback: {positivePercentage}%</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nexport default function Section (props){\r\n  return (\r\n    <div>\r\n      <h2>{props.title}</h2>\r\n      <div>{props.children}</div>\r\n    </div>)\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Notification (props){\r\n  return (\r\n    <div>\r\n      <span>{props.message}</span>\r\n    </div>)\r\n}","import React from 'react';\nimport './App.css'; \nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Statistics from './components/statistics/Statistics';\nimport Section from './components/section/Section';\nimport Notification from './components/notification/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n\n  if \n\n  countTotalFeedback = () => {\n    this.setState (prevState => ({\n      total: prevState.good + prevState.neutral + prevState.bad,\n    }))\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState (prevState => ({\n      positivePercentage: Math.round(100/prevState.total*prevState.good),\n    }))\n  }\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1\n    }))\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  }\n\n  render (){\n    let content;\n    if (this.state.total>0) {\n       content = <Statistics\n       good={this.state.good} \n       neutral={this.state.neutral}\n       bad={this.state.bad} \n       total={this.state.total} \n       positivePercentage={this.state.positivePercentage}\n       />\n    } else {\n      content = <Notification \n      message={'No feedback given'}\n      />\n    }\n    return (\n      <div>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions \n            options={['good', 'bad', 'neutral']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n            {content}\n        </Section>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"FeedbackOptions_buttonsContainer__2z3a-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsContainer\":\"Statistics_resultsContainer__3N9HN\"};"],"sourceRoot":""}